#!/bin/bash


#./getopt.sh --foo=bar -v -n 10 blah -one='last arg'
#http://blog.apokalyptik.com/files/bash-getopt/getopt.sh


function getopt() 
{
  var=""
  wantarg=0
  for (( i=1; i<=$#; i+=1 )); do
    lastvar=$var
    var=${!i}
    if [ "$var" = "" ]; then 
        continue 
    fi
    echo \ $var | grep -q -- '='
    if [ $? -eq 0 ]; then
      ## -*param=value
      var=$(echo \ $var | sed -r s/'^[ ]*-*'/''/)
      myvar=${var%=*}
      myval=${var#*=}
      eval "${myvar}"="'$myval'"
    else
      echo \ $var | grep -E -q -- '^[ ]*-'
      if [ $? -eq 0 ]; then
        ## -*param$
        var=$(echo \ $var | sed -r s/'^[ ]*-*'/''/)
        eval "${var}"=1
        wantarg=1
      else
        echo \ $var | grep -E -- '^[ ]*-'
        if [ $? -eq 0 ]; then
          # the current one has a dash, so cannot be
          # the argument to the last parameter
          wantarg=0
        fi
        if [ $wantarg -eq 1 ]; then
          # parameter argument
          val=$var
          var=$lastvar
          eval "${var}"="'${val}'"
          wantarg=0
        else
          # parameter
          if [ "${!var}" = "" ]; then
            eval "${var}"=1
          fi
          wantarg=0
        fi
      fi
    fi
  done
}

function print_help()
{
	echo 'usage:   configure '
	echo "Options: --prefix[=DIR]          Loong SSO Install dir"
	echo "         --gd[=DIR]              Include GD support.  DIR is the GD library base install directory [BUNDLED]"
	echo "         --mysql[=DIR]           Include MySQL support. DIR is the MySQL base directory"
	echo "         --cache[=DIR]           Include cache support. DIR is the cache base directory"
	echo "         --user[=TYPE]           用户名是否允许包含中文名, 1为允许包含英文字母、数字 2为允许包含英文字母、数字、中文 (默认为1)"
	echo "         --table[=num]           DB max split member table(数据库 用户表的分表个数,默认是 '1')"
	exit 0 ;
}

user=1
table=1
OS=$(uname)

OIFS=$IFS; IFS=$(echo -e "\n"); getopt $@; IFS=$OIFS



if [ "$help" == "1" ]; then
	print_help
	exit 0;
fi

if [ -z "$prefix" ] || [ -z "$gd" ] || [ -z "$mysql" ] || [ -z "$cache" ] || [ $table -le 0 ]; then
	print_help
	exit 0;
fi



loong_define_config="\
#ifndef __CONFIG_H_
\r\n#define __CONFIG_H_
\r\n
\r\n#define TABLE_CHUNK         ${table} 
\r\n#define WATER_MARK          \"loong SSO\"
\r\n#define SIGN_FONT_PATH      \"${prefix}/font/augie.ttf\"
\r\n#define LOONG_INFO_PATH     \"${prefix}/cache/loong_info.db\"
\r\n#define LOONG_MAIL_PATH     \"${prefix}/cache/loong_mail.db\"
\r\n#define LOONG_USER_PATH     \"${prefix}/cache/loong_user.db\"
\r\n#define LOONG_CONFIG_PATH   \"${prefix}/conf/loong_sso.xml\"
\r\n#define LOONG_LOG_PATH      \"${prefix}/log/loong_sso.log\"
\r\n\r\n#endif
\r\n"


echo -e $loong_define_config > _config.h

echo -e "all: loong\r\nCC = gcc\r\nINSTDIR = ${prefix}\r\n" > Makefile

if [ "$OS" == "Linux" ]; then
	condition1="CFLAGS = -O2 -fno-guess-branch-probability -DHAVE_SYS_EPOLL_H";
elif [ "$OS" == "FreeBSD" ]; then
	condition1="CFLAGS = -O2 -fno-guess-branch-probability -DHAVE_SYS_EVENT_H";
else
	echo "loong sso not run this ${OS}";
	exit 0;
fi

if [ "$user" == "1" ]; then
	condition2="-DALPHA_USERNAME";
elif [ "$user" == "2" ]; then
	condition2="-DCHINA_USERNAME";
else
	echo "Please select USERNAME TYLE '1 or 2'";
	exit 0;
fi

echo -e "${condition1} ${condition2}\r\n" >> Makefile;

echo -e "INCLUDE = -I./ -I./include -I${cache}/include -I${gd}/include -I${mysql}/include/mysql\r\n" >> Makefile;
echo -e "LIBS    = -L${cache}/lib -L${gd}/lib -L${mysql}/lib/mysql\r\n" >> Makefile;

cat Makefile.in >> Makefile;

echo -e "\r\nplease Run make\r\n";